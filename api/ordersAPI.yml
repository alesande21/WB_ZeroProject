openapi: '3.0.3'
info:
    version: 1.0.0
    title: Order Management API
    description: |
      API для управления доставкой.
servers:
  - url: /api
    description: Локальный сервер API

paths:
  /api/ping:
    get:
      summary: Првоерка доступности сервера
      description: |
        Этот эндпоинт используется для проверки готовности сервера обрабатывать запросы. 

      responses:
        "200":
          description: |
            Сервер готов обрабатывать запросы, если отвечает "200 OK".
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.

  /api/orders:
    get:
      summary: Получение списка заказов
      description: |
        Список заказов.
        
        Если фильтры не заданы возвращаются все заказы.
      operationId: getOrders
      parameters:
        - $ref: "#/components/parameters/paginationLimit"
        - $ref: "#/components/parameters/paginationOffset"
      responses:
        "200":
          description: Успешно получен список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order'
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/orders/new:
    post:
      summary: Создание нового заказа
      description: Создание нового заказа с заданными параметрами.
      operationId: createOrder
      requestBody:
        description: Данные нового заказа
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/order"
      responses:
        "200":
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        "400":
          description: Ошибка при создании заказа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /api/orders/{order_uid}:
    get:
      summary: Получение заказа по идентификатору
      operationId: getOrderById
      parameters:
        - name: order_uid
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/orderId"
      responses:
        "200":
          description: 'Заказ по идентификатору найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        "400":
          description: Ошибка получения заказа по идентификатору
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"

components:
  schemas:
    orderId:
      type: string
      description: Уникальный идентификатор заказа
      example: b563feb7b2b84b6test1
      maxLength: 100
    deliveryName:
      type: string
      description: Полное навзание доставки
      maxLength: 100
    deliveryPhone:
      type: string
      description: Номер телофона
      maxLength: 50
    deliveryZip:
      type: string
      description: Почтовый индекс
      maxLength: 20
    deliveryCity:
      type: string
      description: Город доствки
      maxLength: 30
    deliveryAddress:
      type: string
      description: Адрес доставки
      maxLength: 100
    deliveryRegion:
      type: string
      description: Регион доставки
      maxLength: 50
    deliveryEmail:
      type: string
      description: Электронный адрес адресата доставки
      format: email
      maxLength: 50
    delivery:
      type: object
      description: Информация о доставке
      properties:
        id:
          $ref: "#/components/schemas/orderId"
        name:
          $ref: "#/components/schemas/deliveryName"
        phone:
          $ref: "#/components/schemas/deliveryPhone"
        zip:
          $ref: "#/components/schemas/deliveryZip"
        city:
          $ref: "#/components/schemas/deliveryCity"
        address:
          $ref: "#/components/schemas/deliveryAddress"
        region:
          $ref: "#/components/schemas/deliveryRegion"
        email:
          $ref: "#/components/schemas/deliveryEmail"

      required:
        - id
        - name
        - phone
        - zip
        - city
        - address
        - region
        - email
      example:
        id: b563feb7b2b84b6test1
        name: Test Testov
        phone: +9720000000
        zip: 2639809
        city: Kiryat Mozkin
        address: Ploshad Mira 15
        region: Kraiot
        email: test@gmail.com"

#    transactionId:
#      type: string
#      description: Номер транзакции
#      maxLength: 100
    paymentRequestId:
      type: string
      description: Номер транзакции
      maxLength: 100
    paymentCurrency:
      type: string
      description: Валюта транзакции
      maxLength: 50
    paymentProvider:
      type: string
      description: Поставщик
      maxLength: 100
    paymentAmount:
      type: number
      description: Сумма транзакции
      format: double
    paymentDt:
      type: string
      description: Время транзакции в формате Unix-времени
      example: 1637907727
      maxLength: 50
    paymentBank:
      type: string
      description: Банк транзакции
    paymentDeliveryCost:
      type: number
      description: Стоимость доставки
      format: double
    paymentGoodsTotal:
      type: number
      description: Общая стоимость товаров без учета доставки
      format: double
    paymentCustomFee:
      type: number
      description: Дополнительные расходы на доставку
      format: double
    payment:
      type: object
      description: Информация о оплате заказа
      properties:
        transaction:
          $ref: "#/components/schemas/orderId"
        request_id:
          $ref: "#/components/schemas/paymentRequestId"
        currency:
          $ref: "#/components/schemas/paymentCurrency"
        provider:
          $ref: "#/components/schemas/paymentProvider"
        amount:
          $ref: "#/components/schemas/paymentAmount"
        payment_dt:
          $ref: "#/components/schemas/paymentDt"
        bank:
          $ref: "#/components/schemas/paymentBank"
        delivery_cost:
          $ref: "#/components/schemas/paymentDeliveryCost"
        goods_total:
          $ref: "#/components/schemas/paymentGoodsTotal"
        custom_fee:
          $ref: "#/components/schemas/paymentCustomFee"

      required:
        - transaction
        - request_id
        - currency
        - provider
        - amount
        - payment_dt
        - bank
        - delivery_cost
        - goods_total
        - custom_fee

    itemChrtId:
      type: integer
      description: Уникальный номер товара
      format: int64
    trackNumber:
      type: string
      description: Номер отслеживания товара
      maxLength: 100
    itemPrice:
      type: number
      description: Цена товара до скидки
      format: double
    itemRid:
      type: string
      description: Уникальный идентификатор записи товара в системе
      maxLength: 100
    itemName:
      type: string
      description: Название товара
      maxLength: 100
    itemSale:
      type: number
      description: Размер скидки на товар в процентах
      format: double
    itemSize:
      type: string
      description: Размер товара
      maxLength: 50
    itemTotalPrice:
      type: number
      description: Итоговая цена с учетом скидки
      format: double
    itemNmId:
      type: integer
      description: Внутренний идентификатор товара на торговой площадке или в системе продаж
      format: int64
    itemBrand:
      type: string
      description: Бренд товара.
      maxLength: 50
    itemStatus:
      type: integer
      description: Статус товара или заказа
      format: int32
    item:
      type: object
      description: Информация о товаре
      properties:
        chrt_id:
          $ref: "#/components/schemas/itemChrtId"
        track_number:
          $ref: "#/components/schemas/trackNumber"
        price:
          $ref: "#/components/schemas/itemPrice"
        rid:
          $ref: "#/components/schemas/itemRid"
        name:
          $ref: "#/components/schemas/itemName"
        sale:
          $ref: "#/components/schemas/itemSale"
        size:
          $ref: "#/components/schemas/itemSize"
        total_price:
          $ref: "#/components/schemas/itemTotalPrice"
        nm_id:
          $ref: "#/components/schemas/itemNmId"
        brand:
          $ref: "#/components/schemas/itemBrand"
        status:
          $ref: "#/components/schemas/itemStatus"

      required:
        - chrt_id
        - track_number
        - price
        - rid
        - name
        - sale
        - size
        - total_price
        - nm_id
        - brand
        - status

    items:
      type: array
      description: Список товаров
      items:
        $ref: "#/components/schemas/item"

    entry:
        type: string
        description: Код тороговой площадки или компании
        maxLength: 50
    orderLocale:
      type: string
      description: Язык или региональные настройки
      maxLength: 50
    orderInternalSignature:
      type: string
      description: Внутренняя подпись для проверки или идентификации заказа
      maxLength: 50
    customerId:
      type: string
      description: Идентификатор покупателя
      maxLength: 100
    deliveryService:
      type: string
      description: Название случбы доставки
      maxLength: 100
    shardKey:
      type: string
      description: Ключ шардирования для распределения данных по различным серверам или базам данных.
      maxLength: 10
    smId:
      type: integer
      description: Идентификатор партнера или магазина.
      maxLength: int64
    orderDateCreated:
      type: string
      description: Дата и время создания заказа
      example: 2021-11-26T06:22:19Z
    orderOofShard:
      type: string
      description: Дополнительное поле для шардирования
      maxLength: 5

    order:
      type: object
      description: Детали заказа
      properties:
        order_uid:
          $ref: "#/components/schemas/orderId"
        track_number:
          $ref: "#/components/schemas/trackNumber"
        entry:
          $ref: "#/components/schemas/entry"
        delivery:
          $ref: "#/components/schemas/delivery"
        payment:
          $ref: "#/components/schemas/payment"
        items:
          $ref: "#/components/schemas/items"
        locale:
          $ref: "#/components/schemas/orderLocale"
        internal_signature:
          $ref: "#/components/schemas/orderInternalSignature"
        customer_id:
          $ref: "#/components/schemas/customerId"
        delivery_service:
          $ref: "#/components/schemas/deliveryService"
        shardkey:
          $ref: "#/components/schemas/shardKey"
        sm_id:
          $ref: "#/components/schemas/smId"
        date_created:
          $ref: "#/components/schemas/orderDateCreated"
        oof_shard:
          $ref: "#/components/schemas/orderOofShard"

      required:
        - order_uid
        - track_number
        - entry
        - delivery
        - payment
        - items
        - locale
        - internal_signature
        - customer_id
        - delivery_service
        - shardkey
        - sm_id
        - date_created
        - oof_shard

    orders:
      type: array
      description: Список заказов
      items:
        $ref: "#/components/schemas/order"

    errorResponse:
      type: object
      description: Используется для возвращения ошибки пользователю
      properties:
        reason:
          type: string
          description: Описание ошибки в свободной форме
          minLength: 5
      required:
        - reason
      example:
        reason: <объяснение, почему запрос пользователя не может быть обработан>

  parameters:
    paginationLimit:
      in: query
      name: limit
      required: false
      description: |
        Максимальное число возвращаемых объектов. Используется для запросов с пагинацией.

        Сервер должен возвращать максимальное допустимое число объектов.
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 50
        example: 5
      #  default: 5
    paginationOffset:
      in: query
      name: offset
      required: false
      description: |
        Какое количество объектов должно быть пропущено с начала. Используется для запросов с пагинацией.
      schema:
        type: integer
        format: int32
        example: 0
        #  default: 0
        minimum: 0